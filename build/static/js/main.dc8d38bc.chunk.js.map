{"version":3,"sources":["VideoFooter.js","VideoSidebar.js","Video.js","App.js","serviceWorker.js","index.js"],"names":["VideoFooter","channel","description","song","className","mode","index","src","alt","VideoSidebar","likes","shares","messages","useState","liked","setLiked","fontSize","onClick","e","Video","autoplay","url","videoRef","useRef","play","setPlay","current","pause","loop","ref","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0UAMe,SAASA,EAAT,GAAoD,IAA9BC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,YAAaC,EAAO,EAAPA,KACvD,OACI,yBAAKC,UAAU,eACX,yBAAKA,UAAU,qBACX,gCAAMH,GACN,2BAAIC,GAEJ,yBAAKE,UAAU,uBACf,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAQC,KAAK,WAEL,cAAGC,MAAH,OACI,oCACI,2BAAIH,SAQxB,yBACIC,UAAU,sBACVG,IAAI,uDACJC,IAAI,M,6ECYLC,MAnCf,YAAkD,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,SAAW,EAEnBC,oBAAS,GAFU,mBAEtCC,EAFsC,KAE/BC,EAF+B,KAK7C,OACI,yBAAKX,UAAU,gBACX,yBAAKA,UAAU,uBAGVU,EACK,kBAAC,IAAD,CAAcE,SAAS,QACvBC,QAAS,SAACC,GAAD,OAAOH,GAAS,MAI3B,kBAAC,IAAD,CAAoBC,SAAS,QAC7BC,QAAS,SAACC,GAAD,OAAOH,GAAS,MAI7B,+BAAKD,EAAQJ,EAAQ,EAAIA,IAE7B,yBAAKN,UAAU,uBACX,kBAAC,IAAD,CAAaY,SAAS,UACtB,2BAAIJ,IAER,yBAAKR,UAAU,uBACX,kBAAC,IAAD,CAAWY,SAAS,UACpB,2BAAIL,MCkBLQ,MA/Cf,YASG,EARCC,SAQA,IAPAC,EAOD,EAPCA,IACApB,EAMD,EANCA,QACAC,EAKD,EALCA,YACAC,EAID,EAJCA,KACAO,EAGD,EAHCA,MACAE,EAED,EAFCA,SACAD,EACD,EADCA,OAGMW,EAAWC,iBAAO,MAFzB,EAIyBV,oBAAS,GAJlC,mBAIQW,EAJR,KAIcC,EAJd,KAiBC,OACI,yBAAKrB,UAAU,SACX,2BACIA,UAAU,gBACVa,QAdS,WACbO,GACAF,EAASI,QAAQC,QACjBF,GAAQ,KAERH,EAASI,QAAQF,OACjBC,GAAQ,KASJG,MAAI,EACJC,IAAKP,EACLf,IAAKc,IAGT,kBAAC,EAAD,CACIpB,QAASA,EACTE,KAAMA,EACND,YAAaA,IAGjB,kBAAC,EAAD,CAAcQ,MAAOA,EAAOE,SAAUA,EAAUD,OAAQA,MCDrDmB,MA1Cf,WAGE,OACE,yBAAK1B,UAAU,OACb,gCACE,yBAAKA,UAAU,eAEb,kBAAC,EAAD,CACEiB,IAAI,8XACJpB,QAAQ,WACRC,YAAY,mEACZC,KAAK,4BACLO,MAAO,MACPE,SAAU,KACVD,OAAQ,OAEV,kBAAC,EAAD,CACEU,IAAI,0XACJpB,QAAQ,aACRC,YAAY,2LACZC,KAAK,yBACLO,MAAO,IACPE,SAAU,MACVD,OAAQ,QAGV,kBAAC,EAAD,CACAU,IAAI,8XACJpB,QAAQ,aACRC,YAAY,4FACZC,KAAK,mBACLO,MAAO,KACPE,SAAU,IACVD,OAAQ,UC5BEoB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.dc8d38bc.chunk.js","sourcesContent":["import React from 'react';\nimport './VideoFooter.css';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport MusicNoteIcon from '@material-ui/icons/MusicNote';\nimport Ticker from 'react-ticker';\n\nexport default function VideoFooter({channel, description, song}) {\n    return (\n        <div className=\"videoFooter\">\n            <div className=\"videoFooter__text\">\n                <h3>@{channel}</h3>\n                <p>{description}</p>\n                \n                <div className=\"videoFooter__ticker\">\n                <MusicNoteIcon/>\n                <Ticker mode=\"smooth\" >\n                    {\n                        ({ index }) => (\n                            <>\n                                <p>{song}</p>\n                            </>\n                        )\n                    }\n                </Ticker>\n                </div>\n                \n            </div>\n            <img \n                className=\"videoFooter__record\" \n                src=\"https://static.thenounproject.com/png/934821-200.png\" \n                alt=\"\"\n            />\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport './VideoSidebar.css';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport MessageIcon from '@material-ui/icons/Message';\nimport ShareIcon from '@material-ui/icons/Share';\n\nfunction VideoSidebar({likes, shares, messages}) {\n    // to like.unlike we use hooks\n    const [liked, setLiked] = useState(false);\n\n\n    return (\n        <div className=\"videoSidebar\">\n            <div className=\"videoSidebr__button\" >\n                {/* connected to the hook above */}\n\n                {liked ? \n                      <FavoriteIcon fontSize=\"large\"   \n                      onClick={(e) => setLiked(false)}\n                      />\n                      \n                : \n                    <FavoriteBorderIcon fontSize=\"large\"  \n                    onClick={(e) => setLiked(true)}\n                    />\n                }\n                \n                <p> {liked ? likes + 1 : likes}</p>\n            </div>            \n            <div className=\"videoSidebr__button\">\n                <MessageIcon fontSize=\"large\"   />\n                <p>{messages}</p>\n            </div>            \n            <div className=\"videoSidebr__button\"  >\n                <ShareIcon fontSize=\"large\"  />\n                <p>{shares}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default VideoSidebar\n","import React, { useRef, useState } from 'react';\nimport './Video.css';\nimport VideoFooter from './VideoFooter';\nimport VideoSidebar from './VideoSidebar';\n\n\n\nfunction Video({\n    autoplay,\n    url,\n    channel,\n    description,\n    song,\n    likes,\n    messages,\n    shares,\n}) {\n    // to target the video we need to reference\n    const videoRef = useRef(null);\n    // to pause it  {false because by default the video ain;t gonna be playing}\n    const [play, setPlay] = useState(false)\n\n    // to make it play on one click\n    const onVideoPress = () => {\n        if (play) {\n            videoRef.current.pause();\n            setPlay(false);\n        } else {\n            videoRef.current.play();\n            setPlay(true);\n        }\n        \n    };\n    return (\n        <div className=\"video\">\n            <video \n                className=\"video__player\" \n                onClick={onVideoPress} \n                loop \n                ref={videoRef} \n                src={url}\n                ></video>\n            {/* videoFooter */}\n            <VideoFooter \n                channel={channel} \n                song={song}\n                description={description}\n            />\n            {/* VideoSideBar */}\n            <VideoSidebar likes={likes} messages={messages} shares={shares}/>\n        </div>\n    )\n}\n\nexport default Video\n","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Video from './Video';\n\n\n\nfunction App() {\n\n\n  return (\n    <div className=\"app\">\n      <center>\n        <div className=\"app__videos\">\n          {/* pulled from firebase database */}\n          <Video \n            url=\"https://v16m.tiktokcdn.com/431ad6ef8d7f0143e60eca911321bc09/5f319509/video/tos/useast2a/tos-useast2a-ve-0068c002/53474faf44e3482a8c3e3191bd9859ea/?a=1233&br=3200&bt=1600&cr=0&cs=0&dr=0&ds=3&er=&l=202008081842170101890660490D573AB4&lr=tiktok_m&mime_type=video_mp4&qs=0&rc=Mzc5bmdyNnNydjMzZTczM0ApNGY7OGQ7NWU6N2hmMzNpNGc2LWRpYjM1LWNfLS1iMTZzcy4uYzA1MjYuMjZjMmI1MmE6Yw%3D%3D&vl=&vr=\"\n            channel=\"Howieazy\"\n            description=\" Why he gotta trick me like that #fyp #howieazy #comedy #foryou \"\n            song=\"Original Sound - Howieazy\"\n            likes={97223}\n            messages={8811}\n            shares={3298}\n          />\n          <Video \n            url=\"https://v16m.tiktokcdn.com/32c141d975073db2ebe1da74fe58a071/5f31935e/video/tos/useast2a/tos-useast2a-pve-0068/95e714da1a364bd2bdf59e0ee9fcaac2/?a=1233&br=1482&bt=741&cr=0&cs=0&dr=0&ds=3&er=&l=202008081835100101901871631656CCD5&lr=tiktok_m&mime_type=video_mp4&qs=0&rc=anU3PGVwZG9xdDMzaTczM0ApZWk5ZGk0NDw2NzY7OzY7ZmducjNzX2dxbXBfLS1gMTZzc2JfYjAtLTFjMDVeNS0vNTI6Yw%3D%3D&vl=&vr=\"\n            channel=\"Leenhabbal\"\n            description=\" مين متلي ما بيشعر بالوقت عالtiktok? #tiktokarab #arab #middleeastern\"\n            song=\"Come and Get Your Love\"\n            likes={123}\n            messages={12121}\n            shares={12121}\n          />          \n\n          <Video \n          url=\"https://v16m.tiktokcdn.com/19b34588075c61d63e130a8be03d2779/5f31935e/video/tos/useast2a/tos-useast2a-ve-0068c001/3d5324f4d4b74c2f84583352270d128c/?a=1233&br=3002&bt=1501&cr=0&cs=0&dr=0&ds=3&er=&l=202008081835100101901871631656CCD5&lr=tiktok_m&mime_type=video_mp4&qs=0&rc=anBvc3ZsOzM7djMzNzczM0ApZWhnaTNmaGUzN2VmNDY3O2dibzFrZXBnMl5fLS1hMTZzc15gLS4zNS9fYi5hYmA0XzQ6Yw%3D%3D&vl=&vr=\"\n          channel=\"Amal_Tampa\"\n          description=\" Our differences make us closer #fyp #beach #saudiarabia #french #friends #florida #tampa\"\n          song=\"Ride It - Regard\"\n          likes={2019}\n          messages={196}\n          shares={114}\n        />\n        </div>\n      </center>\n    </div>\n  );\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}